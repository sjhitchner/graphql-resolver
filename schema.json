{
	"__schema": {
		"queryType": {
			"name": "Query"
		},
		"mutationType": null,
		"subscriptionType": null,
		"types": [
			{
				"kind": "SCALAR",
				"name": "Boolean",
				"description": "The `Boolean` scalar type represents `true` or `false`.",
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "OBJECT",
				"name": "Campaign",
				"description": null,
				"fields": [
					{
						"name": "id",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "ID",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "name",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "String",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "active",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "Boolean",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "rewardAssets",
						"description": null,
						"args": [
							{
								"name": "first",
								"description": null,
								"type": {
									"kind": "SCALAR",
									"name": "Int",
									"ofType": null
								},
								"defaultValue": null
							},
							{
								"name": "after",
								"description": null,
								"type": {
									"kind": "SCALAR",
									"name": "ID",
									"ofType": null
								},
								"defaultValue": null
							}
						],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "OBJECT",
								"name": "RewardAssetConnection",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"inputFields": null,
				"interfaces": [
					{
						"kind": "INTERFACE",
						"name": "Node",
						"ofType": null
					}
				],
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "Float",
				"description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](http://en.wikipedia.org/wiki/IEEE_floating_point).",
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "ID",
				"description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID.",
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "Int",
				"description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "INTERFACE",
				"name": "Node",
				"description": null,
				"fields": [
					{
						"name": "id",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "ID",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": [
					{
						"kind": "OBJECT",
						"name": "Campaign",
						"ofType": null
					},
					{
						"kind": "OBJECT",
						"name": "RewardAsset",
						"ofType": null
					}
				]
			},
			{
				"kind": "OBJECT",
				"name": "PageInfo",
				"description": null,
				"fields": [
					{
						"name": "startCursor",
						"description": null,
						"args": [],
						"type": {
							"kind": "SCALAR",
							"name": "ID",
							"ofType": null
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "endCursor",
						"description": null,
						"args": [],
						"type": {
							"kind": "SCALAR",
							"name": "ID",
							"ofType": null
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "hasNextPage",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "Boolean",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"inputFields": null,
				"interfaces": [],
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "OBJECT",
				"name": "Query",
				"description": null,
				"fields": [
					{
						"name": "rewardAsset",
						"description": null,
						"args": [
							{
								"name": "id",
								"description": null,
								"type": {
									"kind": "NON_NULL",
									"name": null,
									"ofType": {
										"kind": "SCALAR",
										"name": "ID",
										"ofType": null
									}
								},
								"defaultValue": null
							}
						],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "OBJECT",
								"name": "RewardAsset",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "rewardAssets",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "LIST",
								"name": null,
								"ofType": {
									"kind": "OBJECT",
									"name": "RewardAsset",
									"ofType": null
								}
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "campaign",
						"description": null,
						"args": [
							{
								"name": "id",
								"description": null,
								"type": {
									"kind": "NON_NULL",
									"name": null,
									"ofType": {
										"kind": "SCALAR",
										"name": "ID",
										"ofType": null
									}
								},
								"defaultValue": null
							}
						],
						"type": {
							"kind": "OBJECT",
							"name": "Campaign",
							"ofType": null
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "campaigns",
						"description": null,
						"args": [
							{
								"name": "active",
								"description": null,
								"type": {
									"kind": "NON_NULL",
									"name": null,
									"ofType": {
										"kind": "SCALAR",
										"name": "Boolean",
										"ofType": null
									}
								},
								"defaultValue": null
							}
						],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "LIST",
								"name": null,
								"ofType": {
									"kind": "OBJECT",
									"name": "Campaign",
									"ofType": null
								}
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "node",
						"description": null,
						"args": [
							{
								"name": "id",
								"description": null,
								"type": {
									"kind": "NON_NULL",
									"name": null,
									"ofType": {
										"kind": "SCALAR",
										"name": "ID",
										"ofType": null
									}
								},
								"defaultValue": null
							}
						],
						"type": {
							"kind": "INTERFACE",
							"name": "Node",
							"ofType": null
						},
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"inputFields": null,
				"interfaces": [],
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "OBJECT",
				"name": "RewardAsset",
				"description": null,
				"fields": [
					{
						"name": "id",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "ID",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "active",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "Boolean",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "campaignId",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "String",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "campaign",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "OBJECT",
								"name": "Campaign",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"inputFields": null,
				"interfaces": [
					{
						"kind": "INTERFACE",
						"name": "Node",
						"ofType": null
					}
				],
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "OBJECT",
				"name": "RewardAssetConnection",
				"description": null,
				"fields": [
					{
						"name": "totalCount",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "Int",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "edges",
						"description": null,
						"args": [],
						"type": {
							"kind": "LIST",
							"name": null,
							"ofType": {
								"kind": "OBJECT",
								"name": "RewardAssetEdge",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "pageInfo",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "OBJECT",
								"name": "PageInfo",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"inputFields": null,
				"interfaces": [],
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "OBJECT",
				"name": "RewardAssetEdge",
				"description": null,
				"fields": [
					{
						"name": "cursor",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "ID",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "node",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "OBJECT",
								"name": "RewardAsset",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"inputFields": null,
				"interfaces": [],
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "String",
				"description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "OBJECT",
				"name": "__Directive",
				"description": "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior\nin ways field arguments will not suffice, such as conditionally including or\nskipping a field. Directives provide this by describing additional information\nto the executor.",
				"fields": [
					{
						"name": "name",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "String",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "description",
						"description": null,
						"args": [],
						"type": {
							"kind": "SCALAR",
							"name": "String",
							"ofType": null
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "locations",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "LIST",
								"name": null,
								"ofType": {
									"kind": "NON_NULL",
									"name": null,
									"ofType": {
										"kind": "ENUM",
										"name": "__DirectiveLocation",
										"ofType": null
									}
								}
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "args",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "LIST",
								"name": null,
								"ofType": {
									"kind": "NON_NULL",
									"name": null,
									"ofType": {
										"kind": "OBJECT",
										"name": "__InputValue",
										"ofType": null
									}
								}
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"inputFields": null,
				"interfaces": [],
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "ENUM",
				"name": "__DirectiveLocation",
				"description": "A Directive can be adjacent to many parts of the GraphQL language, a\n__DirectiveLocation describes one such possible adjacencies.",
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": [
					{
						"name": "QUERY",
						"description": "Location adjacent to a query operation.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "MUTATION",
						"description": "Location adjacent to a mutation operation.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "SUBSCRIPTION",
						"description": "Location adjacent to a subscription operation.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "FIELD",
						"description": "Location adjacent to a field.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "FRAGMENT_DEFINITION",
						"description": "Location adjacent to a fragment definition.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "FRAGMENT_SPREAD",
						"description": "Location adjacent to a fragment spread.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "INLINE_FRAGMENT",
						"description": "Location adjacent to an inline fragment.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "SCHEMA",
						"description": "Location adjacent to a schema definition.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "SCALAR",
						"description": "Location adjacent to a scalar definition.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "OBJECT",
						"description": "Location adjacent to an object type definition.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "FIELD_DEFINITION",
						"description": "Location adjacent to a field definition.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "ARGUMENT_DEFINITION",
						"description": "Location adjacent to an argument definition.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "INTERFACE",
						"description": "Location adjacent to an interface definition.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "UNION",
						"description": "Location adjacent to a union definition.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "ENUM",
						"description": "Location adjacent to an enum definition.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "ENUM_VALUE",
						"description": "Location adjacent to an enum value definition.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "INPUT_OBJECT",
						"description": "Location adjacent to an input object type definition.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "INPUT_FIELD_DEFINITION",
						"description": "Location adjacent to an input object field definition.",
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"possibleTypes": null
			},
			{
				"kind": "OBJECT",
				"name": "__EnumValue",
				"description": "One possible value for a given Enum. Enum values are unique values, not a\nplaceholder for a string or numeric value. However an Enum value is returned in\na JSON response as a string.",
				"fields": [
					{
						"name": "name",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "String",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "description",
						"description": null,
						"args": [],
						"type": {
							"kind": "SCALAR",
							"name": "String",
							"ofType": null
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "isDeprecated",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "Boolean",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "deprecationReason",
						"description": null,
						"args": [],
						"type": {
							"kind": "SCALAR",
							"name": "String",
							"ofType": null
						},
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"inputFields": null,
				"interfaces": [],
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "OBJECT",
				"name": "__Field",
				"description": "Object and Interface types are described by a list of Fields, each of which has\na name, potentially a list of arguments, and a return type.",
				"fields": [
					{
						"name": "name",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "String",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "description",
						"description": null,
						"args": [],
						"type": {
							"kind": "SCALAR",
							"name": "String",
							"ofType": null
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "args",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "LIST",
								"name": null,
								"ofType": {
									"kind": "NON_NULL",
									"name": null,
									"ofType": {
										"kind": "OBJECT",
										"name": "__InputValue",
										"ofType": null
									}
								}
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "type",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "OBJECT",
								"name": "__Type",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "isDeprecated",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "Boolean",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "deprecationReason",
						"description": null,
						"args": [],
						"type": {
							"kind": "SCALAR",
							"name": "String",
							"ofType": null
						},
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"inputFields": null,
				"interfaces": [],
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "OBJECT",
				"name": "__InputValue",
				"description": "Arguments provided to Fields or Directives and the input fields of an\nInputObject are represented as Input Values which describe their type and\noptionally a default value.",
				"fields": [
					{
						"name": "name",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "String",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "description",
						"description": null,
						"args": [],
						"type": {
							"kind": "SCALAR",
							"name": "String",
							"ofType": null
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "type",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "OBJECT",
								"name": "__Type",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "defaultValue",
						"description": "A GraphQL-formatted string representing the default value for this input value.",
						"args": [],
						"type": {
							"kind": "SCALAR",
							"name": "String",
							"ofType": null
						},
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"inputFields": null,
				"interfaces": [],
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "OBJECT",
				"name": "__Schema",
				"description": "A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all\navailable types and directives on the server, as well as the entry points for\nquery, mutation, and subscription operations.",
				"fields": [
					{
						"name": "types",
						"description": "A list of all types supported by this server.",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "LIST",
								"name": null,
								"ofType": {
									"kind": "NON_NULL",
									"name": null,
									"ofType": {
										"kind": "OBJECT",
										"name": "__Type",
										"ofType": null
									}
								}
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "queryType",
						"description": "The type that query operations will be rooted at.",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "OBJECT",
								"name": "__Type",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "mutationType",
						"description": "If this server supports mutation, the type that mutation operations will be rooted at.",
						"args": [],
						"type": {
							"kind": "OBJECT",
							"name": "__Type",
							"ofType": null
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "subscriptionType",
						"description": "If this server support subscription, the type that subscription operations will be rooted at.",
						"args": [],
						"type": {
							"kind": "OBJECT",
							"name": "__Type",
							"ofType": null
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "directives",
						"description": "A list of all directives supported by this server.",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "LIST",
								"name": null,
								"ofType": {
									"kind": "NON_NULL",
									"name": null,
									"ofType": {
										"kind": "OBJECT",
										"name": "__Directive",
										"ofType": null
									}
								}
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"inputFields": null,
				"interfaces": [],
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "OBJECT",
				"name": "__Type",
				"description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of\ntypes in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that\ntype. Scalar types provide no information beyond a name and description, while\nEnum types provide their values. Object and Interface types provide the fields\nthey describe. Abstract types, Union and Interface, provide the Object types\npossible at runtime. List and NonNull types compose other types.",
				"fields": [
					{
						"name": "kind",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "ENUM",
								"name": "__TypeKind",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "name",
						"description": null,
						"args": [],
						"type": {
							"kind": "SCALAR",
							"name": "String",
							"ofType": null
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "description",
						"description": null,
						"args": [],
						"type": {
							"kind": "SCALAR",
							"name": "String",
							"ofType": null
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "fields",
						"description": null,
						"args": [
							{
								"name": "includeDeprecated",
								"description": null,
								"type": {
									"kind": "SCALAR",
									"name": "Boolean",
									"ofType": null
								},
								"defaultValue": "false"
							}
						],
						"type": {
							"kind": "LIST",
							"name": null,
							"ofType": {
								"kind": "NON_NULL",
								"name": null,
								"ofType": {
									"kind": "OBJECT",
									"name": "__Field",
									"ofType": null
								}
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "interfaces",
						"description": null,
						"args": [],
						"type": {
							"kind": "LIST",
							"name": null,
							"ofType": {
								"kind": "NON_NULL",
								"name": null,
								"ofType": {
									"kind": "OBJECT",
									"name": "__Type",
									"ofType": null
								}
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "possibleTypes",
						"description": null,
						"args": [],
						"type": {
							"kind": "LIST",
							"name": null,
							"ofType": {
								"kind": "NON_NULL",
								"name": null,
								"ofType": {
									"kind": "OBJECT",
									"name": "__Type",
									"ofType": null
								}
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "enumValues",
						"description": null,
						"args": [
							{
								"name": "includeDeprecated",
								"description": null,
								"type": {
									"kind": "SCALAR",
									"name": "Boolean",
									"ofType": null
								},
								"defaultValue": "false"
							}
						],
						"type": {
							"kind": "LIST",
							"name": null,
							"ofType": {
								"kind": "NON_NULL",
								"name": null,
								"ofType": {
									"kind": "OBJECT",
									"name": "__EnumValue",
									"ofType": null
								}
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "inputFields",
						"description": null,
						"args": [],
						"type": {
							"kind": "LIST",
							"name": null,
							"ofType": {
								"kind": "NON_NULL",
								"name": null,
								"ofType": {
									"kind": "OBJECT",
									"name": "__InputValue",
									"ofType": null
								}
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "ofType",
						"description": null,
						"args": [],
						"type": {
							"kind": "OBJECT",
							"name": "__Type",
							"ofType": null
						},
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"inputFields": null,
				"interfaces": [],
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "ENUM",
				"name": "__TypeKind",
				"description": "An enum describing what kind of type a given `__Type` is.",
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": [
					{
						"name": "SCALAR",
						"description": "Indicates this type is a scalar.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "OBJECT",
						"description": "Indicates this type is an object. `fields` and `interfaces` are valid fields.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "INTERFACE",
						"description": "Indicates this type is an interface. `fields` and `possibleTypes` are valid fields.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "UNION",
						"description": "Indicates this type is a union. `possibleTypes` is a valid field.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "ENUM",
						"description": "Indicates this type is an enum. `enumValues` is a valid field.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "INPUT_OBJECT",
						"description": "Indicates this type is an input object. `inputFields` is a valid field.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "LIST",
						"description": "Indicates this type is a list. `ofType` is a valid field.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "NON_NULL",
						"description": "Indicates this type is a non-null. `ofType` is a valid field.",
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"possibleTypes": null
			}
		],
		"directives": [
			{
				"name": "deprecated",
				"description": "Marks an element of a GraphQL schema as no longer supported.",
				"locations": [
					"FIELD_DEFINITION",
					"ENUM_VALUE"
				],
				"args": [
					{
						"name": "reason",
						"description": "Explains why this element was deprecated, usually also including a suggestion\nfor how to access supported similar data. Formatted in\n[Markdown](https://daringfireball.net/projects/markdown/).",
						"type": {
							"kind": "SCALAR",
							"name": "String",
							"ofType": null
						},
						"defaultValue": "\"No longer supported\""
					}
				]
			},
			{
				"name": "include",
				"description": "Directs the executor to include this field or fragment only when the `if` argument is true.",
				"locations": [
					"FIELD",
					"FRAGMENT_SPREAD",
					"INLINE_FRAGMENT"
				],
				"args": [
					{
						"name": "if",
						"description": "Included when true.",
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "Boolean",
								"ofType": null
							}
						},
						"defaultValue": null
					}
				]
			},
			{
				"name": "skip",
				"description": "Directs the executor to skip this field or fragment when the `if` argument is true.",
				"locations": [
					"FIELD",
					"FRAGMENT_SPREAD",
					"INLINE_FRAGMENT"
				],
				"args": [
					{
						"name": "if",
						"description": "Skipped when true.",
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "Boolean",
								"ofType": null
							}
						},
						"defaultValue": null
					}
				]
			}
		]
	}
}
KIND SCALAR
KIND OBJECT
KIND NON_NULL
KIND SCALAR
KIND NON_NULL
KIND SCALAR
KIND NON_NULL
KIND SCALAR
KIND NON_NULL
KIND OBJECT
KIND SCALAR
KIND SCALAR
KIND SCALAR
KIND INTERFACE
KIND OBJECT
KIND SCALAR
KIND SCALAR
KIND NON_NULL
KIND SCALAR
KIND OBJECT
KIND NON_NULL
KIND OBJECT
KIND NON_NULL
KIND LIST
KIND OBJECT
KIND OBJECT
KIND NON_NULL
KIND LIST
KIND OBJECT
KIND INTERFACE
KIND OBJECT
KIND NON_NULL
KIND SCALAR
KIND NON_NULL
KIND SCALAR
KIND NON_NULL
KIND SCALAR
KIND NON_NULL
KIND OBJECT
KIND OBJECT
KIND NON_NULL
KIND SCALAR
KIND LIST
KIND OBJECT
KIND NON_NULL
KIND OBJECT
KIND OBJECT
KIND NON_NULL
KIND SCALAR
KIND NON_NULL
KIND OBJECT
KIND SCALAR
KIND OBJECT
KIND ENUM
KIND OBJECT
KIND OBJECT
KIND OBJECT
KIND OBJECT
KIND OBJECT
KIND ENUM
package resolver



// import aggregator
// import context
// import errors

type Resolver struct {
	aggregator Aggregator
}





type CampaignResolver struct {

	
	iduser_type

	
	nameuser_type

	
	activeuser_type

	
	rewardAssetsRewardAssetConnection

}


type PageInfoResolver struct {

	
	startCursoruser_type

	
	endCursoruser_type

	
	hasNextPageuser_type

}


type QueryResolver struct {

	
	rewardAssetRewardAsset

	
	rewardAssets[]RewardAsset

	
	campaignCampaign

	
	campaigns[]Campaign

	
	nodeNode

}


type RewardAssetResolver struct {

	
	iduser_type

	
	activeuser_type

	
	campaignIduser_type

	
	campaignCampaign

}


type RewardAssetConnectionResolver struct {

	
	totalCountuser_type

	
	edges[]RewardAssetEdge

	
	pageInfoPageInfo

}


type RewardAssetEdgeResolver struct {

	
	cursoruser_type

	
	nodeRewardAsset

}



