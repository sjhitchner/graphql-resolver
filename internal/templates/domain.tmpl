{{ template "Header" }}
package domain

{{ template "Imports" unique .Imports "context" "encoding/json" }}


{{ define "ModelStruct" }}
type {{ camel .Name }} struct {
{{- range $field := .Fields }}
    {{- if $field.Relationship -}}
    {{- if eq $field.Relationship.Type "one2one" -}}
    {{ template "ModelField" args "Internal" $field.Internal "Type" $field.Type }}
	{{- end -}}
	{{- else -}}
    {{ template "ModelField" args "Internal" $field.Internal "Type" $field.Type }}
	{{- end -}}
{{- end }}
}

func (t *{{ camel .Name }}) String() string {
	b, err := json.MarshalIndent(t, "", "  ")
	if err != nil {
		return err.Error()
	}
	return string(b)
}
{{- end -}}

{{ define "ModelField" }}
	{{ camel .Internal }} {{ gotype .Type }} `db:"{{ .Internal }}" json:"{{ .Internal }}"`
{{- end }}

{{ with $m := .Model }}
{{ template "RepoInterface" $m }}

{{ template "ModelStruct" $m }}

{{ end }}
