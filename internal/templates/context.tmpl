{{ template "Header" }}
package helpers

{{ template "Imports" unique .Imports "context" }}

type ContextKey int32

const (
	InteractorKey ContextKey = iota
	AggregatorKey
	UserIdKey
	IsAuthorizedKey
)

func SetAggregator(ctx context.Context, agg domainx.Aggregator) context.Context {
	return context.WithValue(ctx, AggregatorKey, agg)
}

func Aggregator(ctx context.Context) domainx.Aggregator {
	return ctx.Value(AggregatorKey).(domainx.Aggregator)
}

func SetInteractor(ctx context.Context, inter domainx.Interactor) context.Context {
	return context.WithValue(ctx, InteractorKey, inter)
}

func Interactor(ctx context.Context) domainx.Interactor {
	return ctx.Value(InteractorKey).(domainx.Interactor)
}

func SetCurrentUserId(ctx context.Context, userId domainx.ID) context.Context {
	return context.WithValue(ctx, UserIdKey, userId)
}

func CurrentUserId(ctx context.Context) int64 {
	return ctx.Value(UserIdKey).(int64)
}
