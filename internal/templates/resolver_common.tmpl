{{ template "Header" }}
package resolvers

{{ template "Imports" unique .Imports "fmt" "strconv" "github.com/graph-gophers/graphql-go" "github.com/pkg/errors" }}


func ToID(id domain.{{ camel .Id.Name }}) graphql.ID {
{{- if eq .Id.Type "string" }}
	return toStringID(id)
{{- else -}}
	return toIntegerID(id)
{{- end }}
}

func FromID(id graphql.ID) (domain.{{ camel .Id.Name }}, error) {
{{- if eq .Id.Type "string" }}
	return fromStringID(id)
{{- else -}}
	return fromIntegerID(id)
{{- end }}
}

func toIntegerID(id domain.{{ camel .Id.Name }}) graphql.ID {
	return graphql.ID(id)
}

func toStringID(id domain.{{ camel .Id.Name }}) graphql.ID {
	return graphql.ID(fmt.Sprintf("%d", id))
}

func fromIntegerID(id graphql.ID) (domain.{{ camel .Id.Name }}, error) {
	a, err := strconv.Atoi(string(id))
	if err != nil {
		return 0, errors.Wrapf(err, "Invalid Id '%v'", id)
	}
	return domain.{{ camel .Id.Name }}(a), nil
}

func fromStringID(id graphql.ID) (domain.{{ camel .Id.Name }}, error) {
{{- if eq .Id.Type "string" }}
	return domain.{{ camel .Id.Name }}(id), nil
{{- else -}}
	return 0, nil
{{- end }}
}
