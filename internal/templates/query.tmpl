{{ template "Header" }}
package resolvers

{{ template "Imports" unique .Imports "context" }}

type Resolver struct {
// Query Resolvers
{{- range $m := .Models }}
{{- if ne $m.Type "link" }}
	*{{ camel $m.Name }}QueryResolver
{{- end }}
{{- end }}

	*Mutation
}

func InitResolver(inter domainx.Interactor) *Resolver {
	return &Resolver{
{{- range $m := .Models }}
{{- if ne $m.Type "link" }}
		&{{ camel $m.Name }}QueryResolver{inter},
{{- end }}
{{- end }}
		&Mutation{inter},
	}
}

type Mutation struct {
	interactor domainx.Interactor
}

func (t *Resolver) Ping(ctx context.Context) string {
	return "Pong"
}

