package resolver

{{ template "imports" join .Imports "encoding/base64" "github.com/graph-gophers/graphql-go" }}

{{ with $m := .Model }}
{{ comment $m.Description }}

type {{ $m.Name }} struct {
{{ template "ModelFields" $m }}
}

type {{ $m.Name }}Resolver struct {
	aggregator Aggregator
	{{ if isQuery $m }}
	{{- else if isPageInfo $m -}}
	{{- template "ModelFields" $m -}}
	{{- else -}}
	aggregator Aggregator
	obj *{{ $m.Name }}
	{{ template "ModelFields" $m }}
	{{- end }}
}

{{ range $f := allFields $m -}}
{{ template "ModelSignature" args "Name" $m.Name "Field" $f }} {
{{- if isQuery $m }}
	{{ template "ResolverMethod" $f }}
{{- else if isConnection $m }}
	{{ template "ConnectionMethod" $f }}
{{- else if isEdge $m }}
	{{ template "EdgeMethod" $f }}
{{- else if isPageInfo $m }}
	{{ template "PageInfoMethod" $f }}
{{- else }}
	{{ template "ResolverMethod" $f }}
{{- end }}
}
{{ end }}
{{ end }}
